// <auto-generated />
using System;
using GuitarDairy.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GuitarDairy.Infrastructure.EF.Migrations
{
    [DbContext(typeof(GuitarDairyContext))]
    partial class GuitarDairyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GuitarDairy.Domain.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Warmup"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Rhythm"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Soloing"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Jazz"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Funk"
                        });
                });

            modelBuilder.Entity("GuitarDairy.Domain.Entities.Entry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<long>("ExerciseId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("Entries");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Date = new DateTime(2021, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = new TimeSpan(0, 0, 30, 0, 0),
                            ExerciseId = 1L,
                            UserId = 0L
                        },
                        new
                        {
                            Id = 2L,
                            Date = new DateTime(2021, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = new TimeSpan(0, 0, 30, 0, 0),
                            ExerciseId = 2L,
                            UserId = 0L
                        },
                        new
                        {
                            Id = 3L,
                            Date = new DateTime(2021, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = new TimeSpan(0, 0, 30, 0, 0),
                            ExerciseId = 3L,
                            UserId = 0L
                        });
                });

            modelBuilder.Entity("GuitarDairy.Domain.Entities.Exercise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 4L,
                            Description = "",
                            Name = "Altered Scale"
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 1L,
                            Description = "",
                            Name = "Eugene's trickbag"
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 3L,
                            Description = "",
                            Name = "Chromatics"
                        });
                });

            modelBuilder.Entity("GuitarDairy.Domain.Entities.Entry", b =>
                {
                    b.HasOne("GuitarDairy.Domain.Entities.Exercise", "Exercise")
                        .WithMany("Entries")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("GuitarDairy.Domain.Entities.Exercise", b =>
                {
                    b.HasOne("GuitarDairy.Domain.Entities.Category", "Category")
                        .WithMany("Exercises")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GuitarDairy.Domain.Entities.Category", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("GuitarDairy.Domain.Entities.Exercise", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
